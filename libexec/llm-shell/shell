#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative "../../lib/llm/shell"

def main(argv)
  options = {}
  option_parser.parse(argv, into: options)
  if argv.empty?
    warn option_parser.help
    throw(:exit, 1)
  else
    LLM::Shell.new(options).start
  end
end

def option_parser
  OptionParser.new do |o|
    o.banner = "Usage: llm-shell [OPTIONS]"
    o.on("-p PROVIDER", "--provider NAME", "gemini, openai, anthropic, or ollama", String)
    o.on("-t [TOKEN]", "--token [TOKEN]", "required by gemini, openai, and anthropic", String)
    o.on("-m [MODEL]", "--model [MODEL]", "optional, the name of a model", Array)
    o.on("-h [HOST]", "--host [HOST]", "optional, sometimes required for ollama", String)
    o.on("-f [GLOB]", "--files [GLOB]", "optional, glob pattern(s) separated by a comma", Array)
  end
end

excode = catch(:exit) {
  main(ARGV)
  0
}
exit excode
